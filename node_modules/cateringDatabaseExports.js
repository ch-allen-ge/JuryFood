var exports = module.exports = {};
var conversions = require('conversionExports.js');
var mysql = require('mysql');
var emailer = require('cateringEmailExports.js');

var random_letters = [];
var row = [];

exports.updateDatabase = function(info) {
		var connection = mysql.createConnection({
	  		host     : 'SAppD',
	  		user     : 'perdomo',
	  		password : 'password1',
	  		database : 'jury_food'
		});

		connection.connect();
		var today = new Date();
		var todayDay = new Date();
		var end = new Date();
		var endDay = new Date();
		today.setFullYear(info.beginYear, info.beginMonth ,info.beginDay);
		todayDay.setFullYear(info.beginYear, info.beginMonth ,info.beginDay);
		end.setFullYear(info.endYear, info.endMonth, info.endDay);
		endDay.setFullYear(info.endYear, info.endMonth, info.endDay);

		var generateRandomLetters = function() {				    
			var randLetterString = "";
	    	var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

		    for (var i=0; i<4; i++) {
		        randLetterString += possible.charAt(Math.floor(Math.random() * possible.length));
		    }

		    return randLetterString;
		}
		var numOfDays = 0;
		var dayCount = 0;
		while (todayDay <= endDay) { 
			numOfDays++;
			todayDay.setDate(todayDay.getDate()+1);
		}

		while (today <= end) {
			if (info.foodChoice === 'breakfast') {	
				var randLet = generateRandomLetters();	
				random_letters.push(randLet);		
				var foodReq = {				  
				  random_alpha: random_letters[random_letters.length-1],
				  cancelled: null,
				  case_office: info.office,
				  case_year: info.year,
				  case_type: info.caseType,
				  case_number: info.caseNumber,
				  case_judge: info.judge,
				  requestor_email: info.email,
				  requestor_telephone: info.phone,
				  juror_count: info.jurors,
				  date_required: today.getFullYear() + '-' + conversions.twoDigitMonth(today.getMonth()) + '-' + today.getDate(),
				  time_required: info.breakfastHour + ':' + info.breakfastMinute,
				  meal_type: 'Exchange',
				  meals_requested: info.quantity,
				  additional_comments: info.additionalComments,
				  date_entered: new Date(),
				  last_modified: new Date()
				}

				var runQuery = function() {
					connection.query('INSERT INTO jury_food_request SET ?', foodReq ,function(err, result) {
						row.push(result.insertId);
  			    		console.log('inserted ' + result.insertId); 			
  			    		runCustomQuery(result.insertId); 
  			    		if (dayCount==numOfDays-1) {
							emailer.sendEmail(info, random_letters, row);
							random_letters = [];
							row = [];
						}
						dayCount++;    		
					});
				};

				var runCustomQuery = function(iden) {
					if (info.otherItemsNeeded === true) {
						for (i = 0; i < info.customFood.length; i++) { 
							var foodReqTwo = {				  
							  request_id: iden,
							  quantity: info.customFood[i].foodQuantity,
							  description: info.customFood[i].foodName
							};

							connection.query('INSERT INTO jury_food_request_additional_items SET ?', foodReqTwo, function(err, result) {
								if (err) {
									console.log(err);
								} else {
									console.log("ID: " + foodReqTwo.request_id)
								}
							});
						}
					}
				};
				runQuery();
				console.log('Processed Breakfast');				  	
			} else if (info.foodChoice === 'deli') {
				var randLet = generateRandomLetters();
				random_letters.push(randLet);
				var foodReq = {
				  random_alpha: random_letters[random_letters.length-1],
				  cancelled: null,
				  case_office: info.office,
				  case_year: info.year,
				  case_type: info.caseType,
				  case_number: info.caseNumber,
				  case_judge: info.judge,
				  requestor_email: info.email,
				  requestor_telephone: info.phone,
				  juror_count: info.jurors,
				  date_required: today.getFullYear() + '-' + conversions.twoDigitMonth(today.getMonth()) + '-' + today.getDate(),
				  time_required: info.breakfastHour + ':' + info.breakfastMinute,
				  meal_type: 'Gourmet Deli',
				  meals_requested: info.quantity,
				  additional_comments: info.additionalComments,
				  date_entered: new Date(),
				  last_modified: new Date()
				};

				var runQuery = function() {
					connection.query('INSERT INTO jury_food_request SET ?', foodReq ,function(err, result) {
						row.push(result.insertId);
  			    		console.log('inserted ' + result.insertId); 			
  			    		runCustomQuery(result.insertId); 
  			    		if (dayCount==numOfDays-1) {
							emailer.sendEmail(info, random_letters, row);
							random_letters = [];
							row = [];
						}
						dayCount++;    		
					});
				};

				var runCustomQuery = function(iden) {
					if (info.otherItemsNeeded === true) {
						for (i = 0; i < info.customFood.length; i++) { 
							var foodReqTwo = {				  
							  request_id: iden,
							  quantity: info.customFood[i].foodQuantity,
							  description: info.customFood[i].foodName
							};

							connection.query('INSERT INTO jury_food_request_additional_items SET ?', foodReqTwo, function(err, result) {
								if (err) {
									console.log(err);
								} else {
									console.log("ID: " + foodReqTwo.request_id)
								}
							});
						}
					}
				};

				runQuery();
				console.log('Processed Lunch');	
			} else if (info.foodChoice === 'breakfastdeli') {
				var randLetOne = generateRandomLetters();
				random_letters.push(randLetOne);
				var foodReqOne = {				  
				  random_alpha: random_letters[random_letters.length-1],
				  cancelled: null,
				  case_office: info.office,
				  case_year: info.year,
				  case_type: info.caseType,
				  case_number: info.caseNumber,
				  case_judge: info.judge,
				  requestor_email: info.email,
				  requestor_telephone: info.phone,
				  juror_count: info.jurors,
				  date_required: today.getFullYear() + '-' + conversions.twoDigitMonth(today.getMonth()) + '-' + today.getDate(),
				  time_required: info.breakfastHour + ':' + info.breakfastMinute,
				  meal_type: 'Exchange',
				  meals_requested: info.quantity,
				  additional_comments: info.additionalComments,
				  date_entered: new Date(),
				  last_modified: new Date()
				};

				var runQueryOne = function() {
					connection.query('INSERT INTO jury_food_request SET ?', foodReqOne ,function(err, result) {
						row.push(result.insertId);
  			    		console.log('inserted ' + result.insertId); 			 		
					});
				};

				runQueryOne();

				var randLetTwo = generateRandomLetters();
				random_letters.push(randLetTwo);
				var foodReqTwo = {				  
				  random_alpha: random_letters[random_letters.length-1],
				  cancelled: null,
				  case_office: info.office,
				  case_year: info.year,
				  case_type: info.caseType,
				  case_number: info.caseNumber,
				  case_judge: info.judge,
				  requestor_email: info.email,
				  requestor_telephone: info.phone,
				  juror_count: info.jurors,
				  date_required: today.getFullYear() + '-' + conversions.twoDigitMonth(today.getMonth()) + '-' + today.getDate(),
				  time_required: info.breakfastHour + ':' + info.breakfastMinute,
				  meal_type: 'Gourmet Deli',
				  meals_requested: info.quantity,
				  additional_comments: info.additionalComments,
				  date_entered: new Date(),
				  last_modified: new Date()
				};

				var runQueryTwo = function() {
					connection.query('INSERT INTO jury_food_request SET ?', foodReqTwo ,function(err, result) {
						row.push(result.insertId);
  			    		console.log('inserted ' + result.insertId); 			
  			    		runCustomQuery(result.insertId); 
  			    		if (dayCount==numOfDays-1) {
							emailer.sendEmail(info, random_letters, row);
							random_letters = [];
							row = [];
						}
						dayCount++;    		
					});
				};

				var runCustomQuery = function(iden) {
					if (info.otherItemsNeeded === true) {
						for (i = 0; i < info.customFood.length; i++) { 
							var foodReqTwo = {				  
							  request_id: iden,
							  quantity: info.customFood[i].foodQuantity,
							  description: info.customFood[i].foodName
							};

							connection.query('INSERT INTO jury_food_request_additional_items SET ?', foodReqTwo, function(err, result) {
								if (err) {
									console.log(err);
								} else {
									console.log("ID: " + foodReqTwo.request_id)
								}
							});
						}
					}
				};

				runQueryTwo();
				console.log('Processed Breakfast and Lunch');	
			} else if (info.foodChoice === 'neither') {
				var randLet = generateRandomLetters();
				random_letters.push(randLet);
				var foodReq = {				  
				  random_alpha: random_letters[random_letters.length-1],
				  cancelled: null,
				  case_office: info.office,
				  case_year: info.year,
				  case_type: info.caseType,
				  case_number: info.caseNumber,
				  case_judge: info.judge,
				  requestor_email: info.email,
				  requestor_telephone: info.phone,
				  juror_count: info.jurors,
				  date_required: today.getFullYear() + '-' + conversions.twoDigitMonth(today.getMonth()) + '-' + today.getDate(),
				  time_required: info.breakfastHour + ':' + info.breakfastMinute,
				  meal_type: null,
				  meals_requested: info.quantity,
				  additional_comments: info.additionalComments,
				  date_entered: new Date(),
				  last_modified: new Date()
				};

				var runQuery = function() {
					connection.query('INSERT INTO jury_food_request SET ?', foodReq ,function(err, result) {
						row.push(result.insertId);
  			    		console.log('inserted ' + result.insertId);
  			    		runCustomQuery(result.insertId); 			
  			    		if (dayCount==numOfDays-1) {
							emailer.sendEmail(info, random_letters, row);
							random_letters = [];
							row = [];
						}
						dayCount++;    		
					});
				};

				runQuery();

				var runCustomQuery = function(iden) {
					if (info.otherItemsNeeded === true) {
						for (i = 0; i < info.customFood.length; i++) { 
							var foodReqTwo = {				  
							  request_id: iden,
							  quantity: info.customFood[i].foodQuantity,
							  description: info.customFood[i].foodName
							};

							connection.query('INSERT INTO jury_food_request_additional_items SET ?', foodReqTwo, function(err, result) {
								if (err) {
									console.log(err);
								} else {
									console.log("ID: " + foodReqTwo.request_id)
								}
							});
						}
					}
				};

				console.log('Processed Custom Order');	
		}			
		today.setDate(today.getDate()+1);
	}//end while loop
	//console.log('Random Letters: ' + random_letters);
	//console.log('Row Indexs: ' + row);
	console.log('Database Updated');
}; //end updateDatabase function